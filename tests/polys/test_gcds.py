"""
A pytest module to test computing GCDs and extended GCDs on polynomials over Galois fields.

Sage:
    to_coeffs = lambda poly: poly.coefficients(sparse=False)[::-1] if poly != 0 else [0]

    PARAMS = [(2,1), (2,8), (3,1), (3,5), (5,1), (5,4)]
    N = 20
    for p, m in PARAMS:
        print(f"POLY_EGCD_{p}_{m} = [")
        R = GF(p**m, repr="int")["x"]
        for _ in range(N):
            a = R.random_element(randint(0, 10))
            b = R.random_element(randint(0, 10))
            d, s, t = xgcd(a, b)
            print(f"    ({to_coeffs(a)}, {to_coeffs(b)}, {to_coeffs(d)}, {to_coeffs(s)}, {to_coeffs(t)}),")
        print("]\n")
"""
import pytest

import galois

PARAMS = [(2,1), (2,8), (3,1), (3,5), (5,1), (5,4)]

# LUT items are (a(x), b(x), d(x), s(x), t(x)). All coefficients in degree-descending order.

POLY_EGCD_2_1 = [
    ([1], [1, 0, 1, 0, 1, 0, 0, 0], [1], [1], [0]),
    ([1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0], [1, 1, 0, 1, 0, 1, 1, 0, 0], [1, 0, 0], [1, 1, 0, 0, 0], [1, 1, 0, 0, 1, 1, 1]),
    ([1, 1, 1, 0, 0, 0], [1, 1, 1, 0, 0], [1, 1, 1, 0, 0], [0], [1]),
    ([1, 1, 0, 1, 1], [1], [1], [0], [1]),
    ([1, 1, 0, 1, 0, 1, 0, 1], [1, 0, 0, 1, 1, 1, 1, 1, 1, 0], [1], [1, 0, 1, 1, 1], [1, 1, 1]),
    ([1, 0, 1, 0, 0], [1], [1], [0], [1]),
    ([1], [1, 0], [1], [1], [0]),
    ([1, 1], [1], [1], [0], [1]),
    ([1, 0, 0, 1, 0], [1, 0], [1, 0], [0], [1]),
    ([1, 0, 1, 0, 1, 0, 1, 1, 1], [1, 1], [1, 1], [0], [1]),
    ([1, 1, 1, 1, 1, 1, 1], [1, 0, 0], [1], [1, 1], [1, 0, 0, 0, 0, 0]),
    ([1, 0, 0, 1, 0, 0, 1, 0, 1, 0], [1, 0, 1, 0, 1, 1], [1, 0, 1, 0, 1, 1], [0], [1]),
    ([1, 1, 0, 1, 0, 0, 0, 1], [1, 0, 0, 1, 0, 1, 0, 1, 0], [1, 1], [1, 0, 1, 0, 1], [1, 1, 1, 1]),
    ([1, 0, 0, 0], [1, 1, 1, 1, 0, 1], [1], [1, 1, 0, 0, 1], [1, 0, 1]),
    ([1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 0], [1, 1, 1, 0, 0, 1], [1, 0, 1], [1, 1], [1, 1, 1, 0, 0, 1, 1]),
    ([1, 1, 1, 0], [1, 0, 0, 1, 0, 0, 1, 1], [1], [1, 1, 1, 1, 0, 0, 1], [1, 0, 1]),
    ([1, 1], [1, 1], [1, 1], [0], [1]),
    ([1, 0, 0, 0, 1, 1], [1, 1, 1, 0], [1, 1, 1], [1], [1, 1, 0]),
    ([1, 0, 1], [1, 0, 0, 0, 1, 1, 1, 1], [1], [1, 0, 1, 0, 0, 1, 1], [1, 0]),
    ([1, 0, 0, 1, 1, 1, 0], [1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1], [1, 1, 1, 0, 1], [1, 1, 0, 1, 0], [1]),
]

POLY_EGCD_2_8 = [
    ([189, 197], [14, 8, 27, 208, 121, 93, 28, 161, 217], [1], [124, 230, 55, 129, 227, 62, 125, 255], [3]),
    ([77, 244, 211, 46, 89], [238, 59], [1], [81], [80, 108, 115, 222]),
    ([15, 49, 228, 42, 160, 167, 54], [16, 113, 62, 133], [1], [242, 27, 254], [48, 101, 62, 205, 212, 110]),
    ([35, 12, 97, 235, 178, 82, 193, 138, 222, 184, 170], [176, 4, 237, 29], [1], [203, 230, 32], [212, 132, 218, 241, 226, 227, 47, 78, 119, 209]),
    ([149, 87, 2, 66, 18, 176, 103, 79, 155], [24, 181, 176, 150, 184, 220, 175, 156, 176, 200], [1], [203, 59, 148, 207, 10, 33, 3, 73, 50], [158, 245, 166, 111, 196, 168, 118, 61]),
    ([193, 74, 79, 251, 89, 185, 58, 3, 25], [178, 37, 169, 73, 166, 100, 152], [1], [86, 118, 111, 111, 73, 201], [40, 245, 39, 11, 134, 183, 55, 5]),
    ([168, 94, 217, 116, 93, 219, 64, 56, 74, 171, 186], [245, 169, 139, 144, 175, 189, 3, 33], [1], [132, 147, 76, 43, 56, 201, 94], [40, 31, 13, 222, 155, 65, 183, 232, 166, 23]),
    ([226, 78, 56, 113], [39, 139, 251, 146, 153, 111, 160, 28, 34, 10], [1], [65, 167, 118, 128, 122, 227, 157, 96, 216], [71, 63, 232]),
    ([210, 98, 58, 74, 94, 23, 167], [183, 213, 230, 156, 44], [1], [33, 107, 11, 116], [53, 7, 49, 176, 100, 210]),
    ([52, 219, 63, 215, 160, 148, 197, 50, 116, 152, 186], [237, 91, 164, 236, 20, 40, 198, 248], [1], [182, 203, 55, 204, 222, 121, 11], [211, 12, 53, 85, 41, 8, 74, 242, 156, 9]),
    ([223, 21, 217, 48, 128, 15, 53], [177, 185, 202, 39, 170, 74, 75, 31], [1], [81, 205, 22, 23, 156, 119, 21], [121, 63, 30, 252, 166, 232]),
    ([28, 218, 104, 56, 16], [118, 19, 242, 195, 7, 138, 117, 147], [1], [53, 12, 125, 104, 195, 80, 179], [199, 200, 19, 18]),
    ([66, 211, 77, 133, 54, 88, 208, 22, 171, 238, 24], [220, 26, 197, 233, 114], [1], [9, 241, 52, 43], [255, 23, 154, 185, 244, 25, 18, 177, 12, 178]),
    ([135, 74, 172], [233, 119, 7, 214, 119, 223, 86, 39, 94, 85], [1], [84, 182, 214, 119, 64, 113, 216, 69], [63]),
    ([41, 227, 73], [17, 104], [1], [151], [179, 183]),
    ([110, 252, 212, 160, 125], [94, 170, 178], [1], [133, 198], [250, 21, 162, 38]),
    ([233, 32, 66, 129, 107], [54, 204, 61, 250, 115], [1], [95, 48, 199, 80], [185, 21, 153, 34]),
    ([104, 32, 244, 27, 97, 91, 83, 200, 94], [92, 173, 79, 40, 246, 129, 230, 213], [1], [37, 164, 151, 7, 192, 254, 167], [205, 207, 104, 141, 192, 167, 172, 132]),
    ([113, 134, 102, 166, 226, 45, 181, 144], [254, 108, 58, 215, 190, 219, 73, 186, 142], [1], [27, 181, 12, 255, 115, 173, 14, 156], [142, 135, 207, 251, 237, 176, 31]),
    ([201, 23, 175], [20, 228, 192, 144, 12, 130], [1], [119, 162, 72, 73, 30], [19, 106]),
]

POLY_EGCD_3_1 = [
    ([1], [2], [1], [0], [2]),
    ([2, 0, 2, 0, 0, 2, 0, 0, 2, 0], [1, 2, 2, 2, 0, 1], [1], [1, 2, 2, 0, 0], [1, 0, 1, 1, 1, 0, 1, 0, 1]),
    ([2, 1, 2, 2, 1, 1], [2, 1, 1, 1, 2, 0, 2], [1, 2], [1, 2, 2, 1, 2], [2, 1, 2, 0]),
    ([2, 0, 0, 0, 2], [1, 2, 0], [1], [2, 2], [2, 1, 1, 1]),
    ([2, 2, 0, 0, 0, 2, 0, 1, 0, 2], [1, 0, 0, 0, 1, 2, 0], [1], [2, 2, 1, 2, 1, 2], [2, 1, 0, 0, 1, 0, 2, 2, 2]),
    ([1, 1, 1, 0, 1, 0, 1, 0, 0, 1], [1, 0, 1, 0, 0], [1], [2, 0, 1], [1, 1, 2, 1, 1, 2, 2, 1]),
    ([2, 1, 0], [2, 0, 1, 0, 0, 0, 2, 1, 1, 1], [1], [2, 1, 2, 0, 0, 0, 2, 2, 1], [1, 1]),
    ([1, 1, 2, 1], [1, 1, 0], [1], [2, 1], [1, 2, 2]),
    ([1, 0, 2], [1, 0, 1, 1, 0], [1, 2], [2, 0, 1], [1]),
    ([2, 1, 0], [2, 0, 0, 2, 1, 0], [1, 0], [1, 1, 1, 2], [2]),
    ([2, 0, 2, 0, 1, 1, 1, 0, 0, 2], [1, 1, 2, 0, 0, 0, 1, 1, 2, 0, 2], [1, 1], [2, 0, 1, 1, 1, 2, 0, 2, 1], [2, 1, 1, 1, 0, 2, 0, 1]),
    ([1], [1, 1, 1, 2, 0, 2, 1, 1, 1, 0, 1], [1], [1], [0]),
    ([2, 1, 1, 0, 0, 0, 0], [2, 0, 0, 0, 0, 1], [1], [2, 0, 2, 2, 1], [1, 2, 0, 0, 0, 1]),
    ([2, 2, 0, 1, 0, 2, 2], [2, 0, 1, 2, 2, 1, 1, 0, 0, 2, 1], [1, 2], [1, 1, 0, 2, 0, 0, 1, 2, 1], [2, 1, 1, 1, 0]),
    ([2, 0, 2, 0, 2, 2, 2, 2, 1], [1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 0], [1], [2, 1, 1, 0, 1, 2, 1, 2, 1, 1], [2, 1, 0, 2, 1, 2, 0, 0]),
    ([1, 0, 2, 1, 2, 1, 1, 1, 2], [2], [1], [0], [2]),
    ([1, 2, 1, 0, 0], [1, 1, 2], [1], [1], [2, 2, 2]),
    ([1, 1, 0, 2, 2, 1, 1, 1, 2, 1], [1, 2, 1, 2, 0], [1, 2], [1, 1, 2], [2, 0, 1, 2, 0, 1, 0, 1]),
    ([2], [1, 1, 2, 1, 0, 1, 2, 1, 2, 2], [1], [2], [0]),
    ([2, 1, 0, 2, 2, 0, 1, 0], [2, 2, 2, 0], [1, 0], [2], [1, 1, 1, 2, 1]),
]

POLY_EGCD_3_5 = [
    ([41, 227, 187, 109, 101, 186, 214, 21, 39, 37, 30], [173, 195, 40, 128, 202, 216, 228, 168, 199, 166], [1], [63, 25, 37, 76, 68, 84, 62, 229, 136], [13, 25, 144, 189, 50, 214, 19, 107, 124, 188]),
    ([194, 128, 151, 239, 32, 173, 6, 194, 35], [69, 100], [1], [242], [226, 82, 39, 13, 209, 35, 36, 107]),
    ([165, 167, 223], [51, 153, 194, 201, 146, 75, 143, 70, 182, 203], [1], [193, 63, 72, 168, 133, 216, 19, 183, 239], [71, 83]),
    ([15, 88, 114, 116, 160], [49, 164, 70, 153, 131], [1], [32, 242, 195, 9], [40, 159, 155, 163]),
    ([52, 233, 199, 186, 227], [137, 78, 42, 202, 215, 227, 213, 66, 142, 106, 86], [1], [47, 89, 125, 237, 107, 22, 204, 191, 96, 10], [180, 54, 191, 154]),
    ([13, 235, 32, 181], [122, 82, 16, 84], [1], [205, 101, 39], [185, 53, 170]),
    ([59, 0, 196, 155, 222, 225, 214, 6, 2], [220, 160, 165, 39], [1], [25, 106, 222], [230, 214, 139, 99, 237, 146, 16, 18]),
    ([13, 114, 167, 35, 159, 239, 207, 208, 145], [130, 128, 124, 177, 137, 9, 120], [1], [135, 110, 120, 151, 156, 40], [118, 14, 93, 16, 77, 132, 91, 147]),
    ([71, 168, 195, 65, 14], [22, 9, 109], [1], [91, 150], [187, 63, 230, 92]),
    ([50, 68, 151, 212, 185, 164, 48, 195, 235], [39, 14], [1], [110], [185, 185, 82, 154, 241, 37, 145, 174]),
    ([54, 96, 115, 141, 134, 172, 147], [218, 129, 6, 58, 136, 174, 90, 157], [1], [34, 71, 216, 185, 21, 197, 140], [64, 213, 159, 177, 96, 163]),
    ([108, 230, 9], [130, 226, 98, 66, 155, 211, 42, 161, 19, 202], [1], [168, 77, 89, 12, 109, 100, 231, 3, 102], [153, 186]),
    ([236, 162, 198, 29, 43, 239, 47], [25, 151, 197, 143, 153, 105, 53, 59, 75], [1], [133, 160, 185, 183, 58, 80, 104, 226], [171, 149, 215, 34, 42, 72]),
    ([191, 197, 89, 93], [140, 196, 233, 121, 137, 149, 79, 167, 167], [1], [50, 224, 12, 126, 52, 82, 24, 115], [197, 112, 144]),
    ([218], [8, 145], [1], [34], [0]),
    ([177, 209, 61, 41], [28, 115, 29, 216, 87, 81, 107, 66], [1], [115, 226, 91, 193, 25, 26, 143], [237, 147, 0]),
    ([52, 7, 42, 73], [226, 157, 236, 99, 106, 63, 25, 54, 2, 206, 128], [1], [94, 28, 150, 185, 32, 48, 101, 169, 46, 11], [224, 189, 38]),
    ([61, 178, 15, 199, 151, 234, 17, 120, 28, 116, 217], [86, 189, 219, 196, 80, 100, 164, 69, 7], [1], [146, 197, 95, 21, 77, 149, 34, 108], [19, 72, 138, 203, 166, 131, 163, 227, 107, 236]),
    ([105], [197, 158, 93], [1], [100], [0]),
    ([23, 104, 15, 164, 129, 186, 68, 122, 200, 153], [72, 201, 233, 215, 137, 184, 28, 182, 87, 8], [1], [117, 140, 210, 144, 169, 120, 138, 80, 88], [68, 69, 149, 30, 207, 81, 72, 206, 197]),
]

POLY_EGCD_5_1 = [
    ([3, 0, 1], [4, 2, 1, 4, 4, 3, 2, 1, 3], [1], [2, 1, 4, 0, 4, 4, 3], [1]),
    ([4, 1, 4, 4, 0, 1, 1], [3, 3, 2, 2], [1, 4], [1, 2], [2, 0, 0, 3, 1]),
    ([1, 3, 0, 4, 2, 1, 0, 3], [2, 3, 1, 2], [1], [3, 3, 3], [1, 0, 1, 2, 0, 0, 1]),
    ([1], [4, 4, 1, 4, 0, 1, 3, 4], [1], [1], [0]),
    ([3, 2, 4, 1, 2, 0, 4, 4, 3, 2, 2], [3], [1], [0], [2]),
    ([1, 4, 4, 1, 2], [4, 3, 4], [1], [1, 4], [1, 1, 2, 2]),
    ([1], [4, 1, 3, 3, 1, 1, 1, 0, 3], [1], [1], [0]),
    ([2, 3, 4, 3, 0, 4, 2, 1], [3, 4], [1, 3], [0], [2]),
    ([1, 4], [4, 4, 2, 0, 0, 0], [1, 4], [1], [0]),
    ([2, 1, 3, 4, 0, 2, 2, 0, 3, 4], [4, 4, 3, 1], [1], [3, 1], [1, 4, 4, 4, 1, 1, 4, 2]),
    ([2, 4, 1, 1, 2, 3], [1, 1, 3, 0, 4, 0], [1], [2, 3, 0, 0, 2], [1, 0, 3, 2, 4]),
    ([2, 1, 0, 2, 0, 3, 0, 1], [1], [1], [0], [1]),
    ([4, 4, 3, 1, 1], [2, 2, 1, 2, 3, 0, 3], [1], [4, 4, 4, 0, 2, 3], [2, 2, 0, 1]),
    ([3, 3, 1, 3, 4, 4, 2, 2, 0, 0], [2, 2, 3, 0, 2, 4, 4], [1, 3], [4, 1, 3, 3, 3], [4, 1, 0, 3, 3, 3, 2, 2]),
    ([2, 1, 1, 4, 3, 0], [2, 3, 4, 0, 4, 2, 1, 3, 4, 4, 0], [1, 0], [2, 0, 0, 3, 1, 3, 1, 3, 0], [3, 2, 0, 4]),
    ([4, 3, 1, 0, 2, 0, 2, 4, 3, 4, 1], [4, 1, 4, 4, 3, 0, 1, 0, 4, 1, 3], [1], [1, 4, 3, 2, 1, 1, 0, 0, 0, 2], [4, 3, 4, 3, 3, 2, 4, 3, 3, 3]),
    ([2, 3, 4, 1, 2, 1, 2, 2, 3, 3, 3], [4, 0, 0, 4, 3], [1, 3], [1, 2], [2, 2, 0, 2, 3, 1, 2, 4]),
    ([2, 3, 4, 2, 0], [3, 3, 1], [1], [1, 4], [1, 2, 4, 1]),
    ([1, 1, 0, 3, 0, 1, 1, 1], [4], [1], [0], [4]),
    ([1, 4, 1, 1, 4, 2, 4, 0, 3, 4], [2, 1, 4, 0, 3, 0, 4, 2, 2, 1, 2], [1], [3, 3, 4, 1, 2, 0, 0, 3, 0, 4], [1, 2, 0, 2, 0, 0, 2, 4, 0]),
]

POLY_EGCD_5_4 = [
    ([394], [6, 291, 133, 552, 397, 50, 602, 492, 522], [1], [346], [0]),
    ([126, 327, 459, 193, 436, 304, 315, 477], [70, 606], [1], [308], [152, 470, 514, 456, 406, 77, 470]),
    ([225, 522, 463, 556, 117, 599], [205, 106, 524, 487, 8, 445, 42, 355, 440], [1], [223, 208, 414, 400, 104, 145, 400, 418], [63, 191, 116, 294, 446]),
    ([386, 54, 295, 486, 351, 428, 98, 26, 121], [442, 495, 4], [1], [265, 581], [612, 30, 229, 107, 592, 357, 574, 134]),
    ([456, 596, 349, 269, 53, 4, 92, 349, 174], [543, 395, 62, 588, 157, 216, 428], [1], [131, 436, 342, 117, 15, 435], [160, 215, 17, 124, 514, 434, 126, 319]),
    ([88, 176, 83, 497, 552, 160, 108], [266, 602, 144, 297], [1], [302, 608, 168], [541, 482, 365, 473, 619, 487]),
    ([493, 532, 446, 381, 235, 157, 549, 391], [477, 320, 391, 222, 401], [1], [260, 51, 446, 60], [227, 573, 266, 287, 193, 456, 578]),
    ([275, 132], [90, 253], [1], [9], [359]),
    ([520, 291, 411, 256, 311, 423, 246, 469], [150, 90], [1], [266], [478, 194, 1, 532, 467, 377, 452]),
    ([198, 17, 615, 25, 356], [316, 66, 184, 428, 277, 471], [1], [37, 371, 76, 199, 533], [398, 256, 571, 558]),
    ([217, 446, 43, 547, 584, 427, 18, 303, 80, 496], [536, 371], [1], [416], [113, 520, 261, 152, 94, 406, 511, 536, 514]),
    ([278, 72, 184, 54, 351, 548, 82], [187, 213, 516, 532, 520, 145, 313], [1], [117, 572, 89, 455, 376, 48], [560, 279, 88, 174, 286, 216]),
    ([488, 438, 33, 47, 351, 118, 240, 165], [574, 56, 594, 478, 601, 464, 363, 476, 616, 235], [1], [135, 365, 604, 53, 387, 523, 280, 398, 57], [577, 476, 126, 339, 196, 238, 608]),
    ([501, 275, 492, 99], [416, 603, 554, 336, 432, 519, 416, 374, 267, 238, 169], [1], [102, 93, 207, 184, 228, 525, 320, 424, 563, 52], [158, 126, 362]),
    ([278, 81, 365, 339, 578, 221, 465], [72, 459, 36, 276, 562, 619], [1], [410, 209, 204, 160, 102], [38, 103, 99, 239, 19, 76]),
    ([374, 122, 556, 560, 36, 169, 418, 458, 622], [534, 169, 82, 542, 375, 37, 475, 390, 182, 253], [1], [77, 441, 181, 235, 363, 247, 404, 63, 21], [492, 609, 349, 199, 123, 43, 567, 63]),
    ([78, 433, 118, 255, 171, 254, 64, 172], [366, 547, 82, 323, 170, 106], [1], [237, 96, 203, 26, 435], [437, 368, 143, 389, 335, 155, 337]),
    ([16, 253, 184, 506, 108, 298, 346, 620], [309, 245, 267, 497, 367, 542, 552], [1], [455, 257, 108, 100, 585, 420], [602, 47, 83, 420, 623, 401, 51]),
    ([133, 48, 480, 562, 28, 424, 372, 441, 411, 80, 15], [440], [1], [0], [535]),
    ([409, 605, 334, 537, 21, 38, 587, 154, 216, 225], [376, 460, 88, 408, 11, 203, 419, 316, 234], [1], [243, 321, 52, 232, 591, 521, 201, 242], [27, 65, 610, 394, 241, 136, 184, 560, 399]),
]


def test_poly_gcd_exceptions():
    a = galois.Poly.Degrees([10, 9, 8, 6, 5, 4, 0])
    b = galois.Poly.Degrees([9, 6, 5, 3, 2, 0])

    with pytest.raises(TypeError):
        galois.poly_gcd(a.coeffs, b)
    with pytest.raises(TypeError):
        galois.poly_gcd(a, b.coeffs)
    with pytest.raises(ValueError):
        galois.poly_gcd(a, galois.Poly(b.coeffs, field=galois.GF(3)))


@pytest.mark.parametrize("characteristic,degree", PARAMS)
def test_poly_gcd(characteristic, degree):
    GF = galois.GF(characteristic**degree)
    LUT = eval(f"POLY_EGCD_{characteristic}_{degree}")
    for item in LUT:
        a = galois.Poly(item[0], field=GF)
        b = galois.Poly(item[1], field=GF)
        d = galois.Poly(item[2], field=GF)
        assert galois.poly_gcd(a, b) == d


def test_poly_egcd_exceptions():
    a = galois.Poly.Degrees([10, 9, 8, 6, 5, 4, 0])
    b = galois.Poly.Degrees([9, 6, 5, 3, 2, 0])

    with pytest.raises(TypeError):
        galois.poly_egcd(a.coeffs, b)
    with pytest.raises(TypeError):
        galois.poly_egcd(a, b.coeffs)
    with pytest.raises(ValueError):
        galois.poly_egcd(a, galois.Poly(b.coeffs, field=galois.GF(3)))


@pytest.mark.parametrize("characteristic,degree", PARAMS)
def test_poly_egcd(characteristic, degree):
    GF = galois.GF(characteristic**degree)
    LUT = eval(f"POLY_EGCD_{characteristic}_{degree}")
    for item in LUT:
        a = galois.Poly(item[0], field=GF)
        b = galois.Poly(item[1], field=GF)
        d = galois.Poly(item[2], field=GF)
        s = galois.Poly(item[3], field=GF)
        t = galois.Poly(item[4], field=GF)
        assert galois.poly_egcd(a, b) == (d, s, t)
